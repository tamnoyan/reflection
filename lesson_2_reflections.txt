# What happens when you initialize a repository? Why do you need to do it?
create a new git repository, and hidden folder named .git is added which contains the required files for version history
Without a repository, git cannot do anything. Git works only on git repositories

# How is the staging area different from the working directory and the repository? What value do you think it offers?
working directory -> adding files to staging area -> create commit -> repository

working area are the files that we works on but didn't decide to upload them to staging area yet, 
staging area show files that was upload from working directory but not in the repository yet, The staging area is like a monitored area by git, we can add and remove before create a commit to the repository.
they help us decide if to create a repository with those files or not. 

# How can you use the staging area to make sure you have one commit per logical change?
check the changes using git diff --stage before commit
you can split changed files in logical change sets. 


# What are some situations when branches would be helpful in keeping your history organized? How would branches help?
in case we want try few new directions but we want to keep the main program as is in the meanwhile, and when we go up to production we can move to one of the branches, also we want to revert easily, we'll use it when we are working on a new feature, fixing a bug, experimental projects when we try all that we never hurt the master branch.